"""
Django settings for insurance_project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config(
    "SECRET_KEY",
    default="django-insecure-s(=fut_i1fz@a=&ky!5i*eiu8^nzx^*-yg#%e2dnh^942oj@58",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default="True", cast=bool)

ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="localhost,127.0.0.1").split(",")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "users",
    "insurance",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "insurance_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "insurance_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Media files
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # 개발 환경에서만 사용
CORS_ALLOWED_ORIGINS = config(
    "CORS_ALLOWED_ORIGINS", default="http://localhost:3000,http://127.0.0.1:3000"
).split(",")

# REST Framework settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# =============================================================================
# RAG System Settings (Retrieval-Augmented Generation)
# =============================================================================

# Pinecone Settings (벡터 데이터베이스)
PINECONE_API_KEY = config("PINECONE_API_KEY", "")
PINECONE_ENVIRONMENT = config("PINECONE_ENVIRONMENT", "gcp-starter")
PINECONE_INDEX_NAME = config("PINECONE_INDEX_NAME", "insurance-documents-main")

# OpenAI Settings (LLM)
OPENAI_API_KEY = config("OPENAI_API_KEY", "")
OPENAI_MODEL = config("OPENAI_MODEL", "gpt-3.5-turbo")
OPENAI_MAX_TOKENS = int(config("OPENAI_MAX_TOKENS", "2000"))
OPENAI_TEMPERATURE = float(config("OPENAI_TEMPERATURE", "0.7"))

# RAG Settings (문서 처리)
CHUNK_SIZE = int(config("CHUNK_SIZE", "1000"))
CHUNK_OVERLAP = int(config("CHUNK_OVERLAP", "200"))
EMBEDDING_DIMENSION = int(config("EMBEDDING_DIMENSION", "1536"))
MAX_TOKENS_PER_CHUNK = int(config("MAX_TOKENS_PER_CHUNK", "4000"))

# Mock API Settings (보험 가격 계산)
MOCK_API_BASE_URL = config("MOCK_API_BASE_URL", "http://localhost:8001")
MOCK_API_TIMEOUT = int(config("MOCK_API_TIMEOUT", "30"))

# File Upload Settings
MAX_UPLOAD_SIZE = config("MAX_UPLOAD_SIZE", default="10485760", cast=int)  # 10MB
ALLOWED_FILE_TYPES = config("ALLOWED_FILE_TYPES", default="pdf,docx").split(",")

# Security Settings
CSRF_TRUSTED_ORIGINS = config(
    "CSRF_TRUSTED_ORIGINS", default="http://localhost:3000,http://127.0.0.1:3000"
).split(",")

# Upstage Embedding Settings
UPSTAGE_API_KEY = config("UPSTAGE_API_KEY", default="")
UPSTAGE_EMBEDDING_MODEL = config(
    "UPSTAGE_EMBEDDING_MODEL", default="solar-embedding-1-large"
)
UPSTAGE_EMBEDDING_DIMENSION = int(config("UPSTAGE_EMBEDDING_DIMENSION", "4096"))
